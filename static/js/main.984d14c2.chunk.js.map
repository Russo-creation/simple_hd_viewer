{"version":3,"sources":["components/three/mesh/room.zip","components/three/hdri/cave_wall_1k.hdr","components/three/effects/scratches.jpg","components/three/lights/Ligths.js","components/three/mesh/MeshList.js","store/actions.js","components/three/mesh/MeshLoader.js","components/three/hdri/HDRI.js","components/three/mesh/Curve.js","components/three/mesh/Fireflies.js","components/three/effects/Effects.js","components/three/ThreeInit.js","components/hud/Loader.js","pages/App.js","serviceWorker.js","store/reducers/loading.js","index.js"],"names":["module","exports","Lights","castShadow","intensity","angle","Math","PI","position","connect","dispatch","onLoadingSceneFinish","type","React","memo","props","nodes","useLoader","GLTFLoader","path","loader","meshArray","Object","keys","i","length","material","side","THREE","transparent","depthWrite","children","opacity","useEffect","geometry","state","loadingTotalSize","onLoadingProgress","loaded","total","loadedSize","totalSize","useState","Url","setUrl","ZipLoader","install","zipLoad","zipfile","on","event","extractAsBlobUrl","load","rotation","useThree","gl","scene","pmremGenerator","PMREMGenerator","RGBELoader","setDataType","UnsignedByteType","compileEquirectangularShader","HdrFile","texture","envMap","fromEquirectangular","environment","background","dispose","Curve","pipeSpline","closed","curveMoving","curveGeometry","speed","direction","looptime","t","Date","now","pos","parameters","getPointAt","x","y","z","multiplyScalar","FirefliesSet","attach","args","emissive","color","distance","decay","Fireflies","group1","useRef","group2","group3","useFrame","delta","current","copy","ref","_load","SMAAImageLoader","prototype","Effects","scratchesTexture","TextureLoader","scratchesTextureURL","camera","size","smaa","composer","useMemo","EffectComposer","addPass","RenderPass","smaaEffect","SMAAEffect","colorEdgesMaterial","setEdgeDetectionThreshold","textureEffect","TextureEffect","blendFunction","BlendFunction","COLOR_DODGE","blendMode","value","vignetteEffect","VignetteEffect","eskil","offset","darkness","bloom","BloomEffect","SCREEN","kernelSize","KernelSize","MEDIUM","luminanceThreshold","height","bokehEffect","BokehEffect","focus","dof","aperture","maxBlur","EffectPass","effectPass","renderToScreen","setSize","width","_","render","set","bind","this","extend","OrbitControls","Controls","update","target","domElement","ThreeInit","Consumer","store","style","overflow","outline","border","concurrent","pixelRatio","window","devicePixelRatio","near","far","antialias","onCreated","setClearColor","toneMapping","outputEncoding","toneMappingExposure","enableDamping","enableZoom","enablePan","dampingFactor","rotateSpeed","fallback","HDRI","convertKBtoMB","toFixed","loadingLoadedSize","loadingProgress","id","App","displayLoadingWindow","loadingFnished","setTimeout","setState","className","from","to","duration","Component","displayWindow","Boolean","location","hostname","match","intialState","reducer","action","progress","rootReducer","combineReducers","loadingReducer","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.984d14c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/room.a8f21fd9.zip\";","module.exports = __webpack_public_path__ + \"static/media/cave_wall_1k.068c0259.hdr\";","module.exports = __webpack_public_path__ + \"static/media/scratches.0f067bff.jpg\";","import React from \"react\";\r\n\r\nconst Lights = () => {\r\n  //create simple lighting in scene\r\n  return (\r\n    <group>\r\n      <spotLight\r\n        castShadow\r\n        intensity={0.2}\r\n        angle={Math.PI / 7}\r\n        position={[2, 15, 2]}\r\n      />\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Lights;\r\n","import * as THREE from \"three\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport { useLoader } from \"react-three-fiber\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../../../store/actions\";\r\n\r\nconst MeshList = (props) => {\r\n  //loading gltf file from blop zip\r\n  const { nodes } = useLoader(GLTFLoader, props.path, (loader) => {});\r\n\r\n  //change in all meshes displaing material side to frontSide\r\n  const meshArray = Object.keys(nodes);\r\n  for (let i = 0; i < meshArray.length; i++) {\r\n    if (typeof nodes[meshArray[i]].material !== \"undefined\") {\r\n      nodes[meshArray[i]].material.side = THREE.FrontSide;\r\n    }\r\n  }\r\n\r\n  //editing specific material in mesh as needed\r\n\r\n  nodes[\"spiderweeb\"].material.transparent = true;\r\n  nodes[\"spiderweeb\"].material.depthWrite = false;\r\n  nodes[\"spiderweeb\"].material.side = THREE.DoubleSide;\r\n\r\n  nodes[\"plant\"].children[0].material.transparent = true;\r\n  nodes[\"plant\"].children[0].material.depthWrite = false;\r\n  nodes[\"plant\"].children[1].material.transparent = true;\r\n  nodes[\"plant\"].children[1].material.depthWrite = false;\r\n\r\n  nodes[\"atlas\"].material.transparent = true;\r\n  nodes[\"atlas\"].material.depthWrite = false;\r\n\r\n  nodes[\"bottle\"].material.transparent = true;\r\n  nodes[\"bottle\"].material.opacity = 0.96;\r\n\r\n  //send to redux value that loading meshes is finished\r\n  useEffect(() => {\r\n    props.onLoadingSceneFinish();\r\n  });\r\n\r\n  //load all meshes from GLTF file\r\n  return (\r\n    <>\r\n      <mesh\r\n        geometry={nodes[\"atlas\"].geometry}\r\n        material={nodes[\"atlas\"].material}\r\n      ></mesh>\r\n      <mesh\r\n        geometry={nodes[\"plant\"].children[0].geometry}\r\n        material={nodes[\"plant\"].children[0].material}\r\n      ></mesh>\r\n      <mesh\r\n        geometry={nodes[\"plant\"].children[1].geometry}\r\n        material={nodes[\"plant\"].children[1].material}\r\n      ></mesh>\r\n      <mesh\r\n        geometry={nodes[\"bottle\"].geometry}\r\n        material={nodes[\"bottle\"].material}\r\n      ></mesh>\r\n      <mesh\r\n        geometry={nodes[\"spiderweeb\"].geometry}\r\n        material={nodes[\"spiderweeb\"].material}\r\n      ></mesh>\r\n\r\n      <mesh\r\n        geometry={nodes[\"beam\"].geometry}\r\n        material={nodes[\"beam\"].material}\r\n      ></mesh>\r\n      <mesh\r\n        geometry={nodes[\"curtine\"].geometry}\r\n        material={nodes[\"curtine\"].material}\r\n      ></mesh>\r\n\r\n      <mesh\r\n        geometry={nodes[\"label\"].geometry}\r\n        material={nodes[\"label\"].material}\r\n      ></mesh>\r\n\r\n      <mesh\r\n        geometry={nodes[\"liquid\"].geometry}\r\n        material={nodes[\"liquid\"].material}\r\n      ></mesh>\r\n\r\n      <mesh\r\n        geometry={nodes[\"plug\"].geometry}\r\n        material={nodes[\"plug\"].material}\r\n      ></mesh>\r\n      <mesh\r\n        geometry={nodes[\"rust_steel\"].geometry}\r\n        material={nodes[\"rust_steel\"].material}\r\n      ></mesh>\r\n      <mesh\r\n        geometry={nodes[\"tweeter\"].geometry}\r\n        material={nodes[\"tweeter\"].material}\r\n      ></mesh>\r\n\r\n      <mesh\r\n        geometry={nodes[\"bulding\"].children[0].geometry}\r\n        material={nodes[\"bulding\"].children[0].material}\r\n      ></mesh>\r\n      <mesh\r\n        geometry={nodes[\"bulding\"].children[1].geometry}\r\n        material={nodes[\"bulding\"].children[1].material}\r\n      ></mesh>\r\n      <mesh\r\n        geometry={nodes[\"window\"].geometry}\r\n        material={nodes[\"window\"].material}\r\n      ></mesh>\r\n      <mesh\r\n        geometry={nodes[\"neckless\"].geometry}\r\n        material={nodes[\"neckless\"].material}\r\n      ></mesh>\r\n      <mesh\r\n        geometry={nodes[\"pistol_body\"].geometry}\r\n        material={nodes[\"pistol_body\"].material}\r\n      ></mesh>\r\n      <mesh\r\n        geometry={nodes[\"pistol_detals\"].geometry}\r\n        material={nodes[\"pistol_detals\"].material}\r\n      ></mesh>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onLoadingSceneFinish: () =>\r\n      dispatch({ type: actionTypes.LoadingSceneFinished }),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(React.memo(MeshList));\r\n","export const LoadingSceneProgress = \"LoadingSceneProgress\";\r\nexport const LoadingSceneFinished = \"LoadingSceneFinished\";\r\n","import * as THREE from \"three\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport ZipLoader from \"zip-loader\";\r\nimport zipfile from \"./room.zip\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../../../store/actions\";\r\n\r\nimport MeshList from \"./MeshList\";\r\n\r\nconst MeshLoader = (props) => {\r\n  const [Url, setUrl] = useState();\r\n  useEffect(() => {\r\n    //Zip initailization\r\n    ZipLoader.install({ THREE: THREE });\r\n\r\n    let zipLoad = new ZipLoader(zipfile);\r\n    //Zip progress events\r\n    zipLoad.on(\"progress\", (event) => {\r\n      //update progress value to redux\r\n      props.onLoadingProgress(event.loaded, event.total);\r\n    });\r\n\r\n    //ZIp loaded event\r\n    zipLoad.on(\"load\", (event) => {\r\n      //change state when loaded and set url as blob\r\n      setUrl(zipLoad.extractAsBlobUrl(\"room.glb\", \"\"));\r\n    });\r\n\r\n    zipLoad.load();\r\n  }, []);\r\n\r\n  //display all loaded meshes from zip\r\n  return (\r\n    <group rotation={[0, -Math.PI / 2.7, 0]}>\r\n      {Url ? <MeshList path={Url} /> : null}\r\n    </group>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loadingTotalSize: state.loader.loadingTotalSize,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onLoadingSceneFinish: () =>\r\n      dispatch({ type: actionTypes.LoadingSceneFinished }),\r\n    onLoadingProgress: (loaded, total) =>\r\n      dispatch({\r\n        type: actionTypes.LoadingSceneProgress,\r\n        loadedSize: loaded,\r\n        totalSize: total,\r\n      }),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(React.memo(MeshLoader));\r\n","import { useEffect } from \"react\";\r\nimport { UnsignedByteType, PMREMGenerator } from \"three\";\r\nimport { useThree } from \"react-three-fiber\";\r\nimport { RGBELoader } from \"three/examples/jsm/loaders/RGBELoader.js\";\r\nimport HdrFile from \"./cave_wall_1k.hdr\";\r\n\r\nexport default () => {\r\n  const { gl, scene } = useThree();\r\n  const pmremGenerator = new PMREMGenerator(gl);\r\n  const loader = new RGBELoader();\r\n  loader.setDataType(UnsignedByteType);\r\n  pmremGenerator.compileEquirectangularShader();\r\n\r\n  useEffect(() => {\r\n    //load hdri  from file\r\n    loader.load(HdrFile, (texture) => {\r\n      const envMap = pmremGenerator.fromEquirectangular(texture).texture;\r\n\r\n      //setting hdri as global reflection in materials meshes\r\n      scene.environment = envMap;\r\n      //setting hdri as background image of scene\r\n      scene.background = envMap;\r\n\r\n      texture.dispose();\r\n      pmremGenerator.dispose();\r\n    });\r\n  }, [scene, loader, pmremGenerator]);\r\n\r\n  return null;\r\n};\r\n","import * as THREE from \"three\";\r\n\r\nconst Curve = () => {\r\n  // tube geometry for firefly move\r\n  let pipeSpline = new THREE.CatmullRomCurve3([\r\n    new THREE.Vector3(14.8652, 32.9998, -6.49185),\r\n    new THREE.Vector3(20.5216, 32.5945, 0.813831),\r\n    new THREE.Vector3(28.0619, 29.3627, 10.164),\r\n    new THREE.Vector3(35.5669, 22.6827, 17.9216),\r\n    new THREE.Vector3(40.4383, 8.68989, 26.5702),\r\n    new THREE.Vector3(38.846, -4.75159, 31.2569),\r\n    new THREE.Vector3(30.5957, -17.0314, 33.8244),\r\n    new THREE.Vector3(12.8381, -26.4493, 34.136),\r\n    new THREE.Vector3(-6.2308, -33.0746, 33.6699),\r\n    new THREE.Vector3(-23.6964, -30.4207, 14.815),\r\n    new THREE.Vector3(-31.3026, -18.7443, -2.66945),\r\n    new THREE.Vector3(-37.7269, -8.06838, -16.129),\r\n    new THREE.Vector3(-37.9757, -3.55331, -20.4425),\r\n    new THREE.Vector3(-35.7074, 0.913048, -21.3536),\r\n    new THREE.Vector3(-31.7932, 2.79949, -20.4053),\r\n    new THREE.Vector3(-26.3579, 1.50805, -15.3775),\r\n    new THREE.Vector3(-25.6137, -8.53149, -6.55324),\r\n    new THREE.Vector3(-22.2108, -20.1177, 5.29171),\r\n    new THREE.Vector3(-16.2342, -27.4076, 14.8455),\r\n    new THREE.Vector3(-2.90318, -27.267, 24.4673),\r\n    new THREE.Vector3(10.901, -18.2159, 29.4572),\r\n    new THREE.Vector3(20.2203, -8.18538, 30.4379),\r\n    new THREE.Vector3(26.2484, 1.92549, 29.1929),\r\n    new THREE.Vector3(33.389, 16.3355, 26.843),\r\n    new THREE.Vector3(36.9722, 30.5457, 25.2953),\r\n    new THREE.Vector3(37.2334, 38.6026, 26.7072),\r\n    new THREE.Vector3(32.1881, 43.227, 32.1869),\r\n    new THREE.Vector3(22.9303, 41.9171, 35.0045),\r\n    new THREE.Vector3(15.1208, 33.3282, 29.9932),\r\n    new THREE.Vector3(6.95571, 18.1453, 13.5123),\r\n    new THREE.Vector3(2.56212, 8.33505, 2.78985),\r\n    new THREE.Vector3(0.506925, 1.68393, -4.81493),\r\n    new THREE.Vector3(-2.22784, -7.67207, -14.7094),\r\n    new THREE.Vector3(-1.64231, -13.6923, -22.6194),\r\n    new THREE.Vector3(4.479, -15.3107, -29.2883),\r\n    new THREE.Vector3(11.8091, -13.1197, -35.3387),\r\n    new THREE.Vector3(20.3793, -7.65231, -37.1522),\r\n    new THREE.Vector3(24.8359, 3.34385, -37.7158),\r\n    new THREE.Vector3(25.8896, 15.3655, -35.0512),\r\n    new THREE.Vector3(22.9722, 25.7977, -29.5478),\r\n    new THREE.Vector3(18.7697, 33.3126, -21.4836),\r\n    new THREE.Vector3(12.5446, 39.243, -9.28498),\r\n    new THREE.Vector3(7.66737, 40.1148, 4.45466),\r\n    new THREE.Vector3(5.83371, 37.6548, 16.1551),\r\n    new THREE.Vector3(2.24585, 30.7398, 26.6894),\r\n    new THREE.Vector3(-1.90157, 20.7995, 34.1625),\r\n    new THREE.Vector3(-5.93563, 13.0682, 38.2609),\r\n    new THREE.Vector3(-9.65675, 3.50126, 41.8212),\r\n    new THREE.Vector3(-15.7445, -7.50749, 41.5798),\r\n    new THREE.Vector3(-22.2725, -16.6806, 36.5467),\r\n    new THREE.Vector3(-27.2141, -21.6685, 30.9927),\r\n    new THREE.Vector3(-31.8197, -24.7596, 19.8817),\r\n    new THREE.Vector3(-32.7013, -22.3514, 7.82813),\r\n    new THREE.Vector3(-32.9423, -18.6717, -6.60217),\r\n    new THREE.Vector3(-32.37, -14.2615, -16.5718),\r\n    new THREE.Vector3(-30.5073, -10.5619, -23.8907),\r\n    new THREE.Vector3(-27.5566, -5.68121, -30.0171),\r\n    new THREE.Vector3(-23.1397, 0.21678, -34.9474),\r\n    new THREE.Vector3(-17.2732, 7.02165, -36.8397),\r\n    new THREE.Vector3(-10.1218, 16.0699, -33.4315),\r\n    new THREE.Vector3(-1.08787, 25.7007, -23.7841),\r\n  ]);\r\n  pipeSpline.closed = true;\r\n\r\n  return pipeSpline;\r\n};\r\n\r\nexport default Curve;\r\n","import React, { useRef } from \"react\";\r\nimport { useFrame } from \"react-three-fiber\";\r\nimport * as THREE from \"three\";\r\n\r\nimport Curve from \"./Curve\";\r\n\r\nconst curveMoving = (curveGeometry, speed, direction) => {\r\n  //checking what position in curve expected\r\n  var time = Date.now();\r\n  var looptime = speed * 1000;\r\n  var t = (time % looptime) / looptime;\r\n\r\n  //invert direction if needed\r\n  if (!direction) {\r\n    t = 1 - t;\r\n  }\r\n\r\n  //getting exact position at cuve in time\r\n  var pos = curveGeometry.parameters.path.getPointAt(t);\r\n\r\n  //making small transition to displaying\r\n  pos.x += -902.7987733512952; //left right\r\n  pos.y += 150.8872503416854; //top bottom\r\n  pos.z += -705.830604006972; //forweward backword\r\n  pos.multiplyScalar(0.001);\r\n\r\n  //retrunging calculated position\r\n  return pos;\r\n};\r\n\r\nconst Fireflies = () => {\r\n  //converting curve to TubeBufferGeometry\r\n  const curveGeometry = new THREE.TubeBufferGeometry(Curve(), 100, 1, 1, true);\r\n\r\n  //creating references\r\n  const group1 = useRef();\r\n  const group2 = useRef();\r\n  const group3 = useRef();\r\n\r\n  //update mesh in evry frame\r\n  useFrame((state, delta) => {\r\n    // 1st fireflie\r\n    group1.current.position.copy(curveMoving(curveGeometry, 20, true));\r\n    // 2st fireflie\r\n    group2.current.position.copy(curveMoving(curveGeometry, 10, true));\r\n    // 3st fireflie\r\n    group3.current.position.copy(curveMoving(curveGeometry, 15, false));\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <group ref={group1}>\r\n        <FirefliesSet />\r\n      </group>\r\n      <group ref={group2}>\r\n        <FirefliesSet />\r\n      </group>\r\n      <group ref={group3}>\r\n        <FirefliesSet />\r\n      </group>\r\n    </>\r\n  );\r\n};\r\n\r\nconst FirefliesSet = () => {\r\n  //create mesh that imitates fireflie\r\n  return (\r\n    <>\r\n      <mesh>\r\n        <sphereBufferGeometry attach=\"geometry\" args={[0.001, 6, 6]} />\r\n        <meshLambertMaterial\r\n          attach=\"material\"\r\n          emissive=\"#ff840b\"\r\n          color=\"white\"\r\n          opacity={0.6}\r\n          transparent={true}\r\n        />\r\n      </mesh>\r\n      <pointLight intensity={0.9} distance={0.25} decay={2} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Fireflies;\r\n","import { useMemo, useEffect } from \"react\";\r\nimport { useLoader, useThree, useFrame } from \"react-three-fiber\";\r\nimport {\r\n  SMAAImageLoader,\r\n  BlendFunction,\r\n  KernelSize,\r\n  BloomEffect,\r\n  EffectComposer,\r\n  EffectPass,\r\n  RenderPass,\r\n  SMAAEffect,\r\n  TextureEffect,\r\n  VignetteEffect,\r\n  BokehEffect,\r\n} from \"postprocessing\";\r\n\r\nimport { TextureLoader } from \"three\";\r\n\r\nimport scratchesTextureURL from \"./scratches.jpg\";\r\n\r\n// Fix smaa loader signature\r\n// Will not be neccessary next version: https://github.com/vanruesc/postprocessing/commit/f05bb85fc9548458ee5e4a24026f308f0a8b72d4\r\nconst _load = SMAAImageLoader.prototype.load;\r\nSMAAImageLoader.prototype.load = function (_, set) {\r\n  return _load.bind(this)(set);\r\n};\r\n\r\nexport default function Effects() {\r\n  const scratchesTexture = useLoader(TextureLoader, scratchesTextureURL);\r\n  const { gl, scene, camera, size } = useThree();\r\n  const smaa = useLoader(SMAAImageLoader);\r\n  const composer = useMemo(() => {\r\n    const composer = new EffectComposer(gl);\r\n    composer.addPass(new RenderPass(scene, camera));\r\n\r\n    //antyaliasing postprocessing\r\n\r\n    const smaaEffect = new SMAAEffect(...smaa);\r\n    smaaEffect.colorEdgesMaterial.setEdgeDetectionThreshold(0.1);\r\n\r\n    //scratches texture postprocessing\r\n\r\n    const textureEffect = new TextureEffect({\r\n      blendFunction: BlendFunction.COLOR_DODGE,\r\n      texture: scratchesTexture,\r\n    });\r\n    textureEffect.blendMode.opacity.value = 0.15;\r\n\r\n    //vignerre postprocessing\r\n\r\n    const vignetteEffect = new VignetteEffect({\r\n      eskil: false,\r\n      offset: 0.35,\r\n      darkness: 0.75,\r\n    });\r\n\r\n    //bloom postprocessing\r\n\r\n    const bloom = new BloomEffect({\r\n      blendFunction: BlendFunction.SCREEN,\r\n      kernelSize: KernelSize.MEDIUM,\r\n      luminanceThreshold: 0.1,\r\n      height: 600,\r\n    });\r\n    bloom.blendMode.opacity.value = 0.2;\r\n\r\n    //DOF postprocessing\r\n\r\n    const bokehEffect = new BokehEffect({\r\n      focus: 0.009,\r\n      dof: 0.002,\r\n      aperture: 0.5,\r\n      maxBlur: 0.01,\r\n    });\r\n\r\n    //passing postprocesing\r\n\r\n    composer.addPass(new EffectPass(camera, bokehEffect));\r\n    const effectPass = new EffectPass(\r\n      camera,\r\n      textureEffect,\r\n      smaaEffect,\r\n      bloom,\r\n      vignetteEffect\r\n    );\r\n    effectPass.renderToScreen = true;\r\n    composer.addPass(effectPass);\r\n    return composer;\r\n  }, []);\r\n  useEffect(() => void composer.setSize(size.width, size.height), [size]);\r\n  return useFrame((_, delta) => composer.render(delta), 1);\r\n}\r\n","import React, { useRef, Suspense } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { Canvas, extend, useThree, useFrame } from \"react-three-fiber\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport Lights from \"./lights/Ligths\";\r\n\r\nimport MeshLoader from \"./mesh/MeshLoader\";\r\nimport HDRI from \"./hdri/HDRI\";\r\nimport Fireflies from \"./mesh/Fireflies\";\r\n\r\nimport Effects from \"./effects/Effects.js\";\r\n\r\nimport { ReactReduxContext, Provider } from \"react-redux\";\r\n\r\nextend({ OrbitControls });\r\n\r\nconst Controls = (props) => {\r\n  //add camera controller to be able to move camera\r\n  const { camera, gl } = useThree();\r\n  const ref = useRef();\r\n  useFrame(() => ref.current.update());\r\n\r\n  return (\r\n    <orbitControls\r\n      ref={ref}\r\n      target={[-1.0112384843663136, 0.06762010421780972, -0.6420848982973388]}\r\n      {...props}\r\n      args={[camera, gl.domElement]}\r\n    />\r\n  );\r\n};\r\n\r\nconst ThreeInit = () => {\r\n  return (\r\n    <ReactReduxContext.Consumer>\r\n      {({ store }) => (\r\n        <Canvas\r\n          style={{\r\n            height: \"100vh\",\r\n            width: \"100vw\",\r\n            overflow: \"hidden\",\r\n            outline: \"none\",\r\n            border: \"none\",\r\n          }}\r\n          concurrent\r\n          pixelRatio={window.devicePixelRatio}\r\n          camera={{\r\n            position: [\r\n              -0.703155642813053,\r\n              0.06158084870789878,\r\n              -0.7431460650269648,\r\n            ],\r\n            near: 0.01,\r\n            far: 20,\r\n          }}\r\n          gl={{ antialias: false }}\r\n          onCreated={({ gl }) => {\r\n            gl.setClearColor(\"black\");\r\n            gl.toneMapping = THREE.ACESFilmicToneMapping;\r\n            gl.outputEncoding = THREE.sRGBEncoding;\r\n            gl.toneMappingExposure = 0.7;\r\n          }}\r\n        >\r\n          <Provider store={store}>\r\n            <Controls\r\n              enableDamping\r\n              enableZoom={true}\r\n              enablePan={true}\r\n              dampingFactor={0.05}\r\n              rotateSpeed={1.1}\r\n            />\r\n\r\n            <Lights />\r\n\r\n            <Suspense fallback={null}>\r\n              <HDRI />\r\n              <MeshLoader />\r\n              <Effects />\r\n              <Fireflies />\r\n            </Suspense>\r\n          </Provider>\r\n        </Canvas>\r\n      )}\r\n    </ReactReduxContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default ThreeInit;\r\n","import React from \"react\";\r\nimport \"../../scss/loader.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst convertKBtoMB = (value) => {\r\n  return (value * 0.000001).toFixed(2);\r\n};\r\n\r\nconst Loader = (props) => {\r\n  const { loadingTotalSize, loadingLoadedSize, loadingProgress } = props;\r\n\r\n  return (\r\n    <div id=\"loadingWindowContener\">\r\n      <div id=\"centeringCage\">\r\n        <div id=\"wait\">please wait...</div>\r\n        <div id=\"infoText\">Loading 3D assets</div>\r\n\r\n        <div id=\"loadbarCage\">\r\n          <div\r\n            id=\"loadbarPtogress\"\r\n            style={{ width: loadingProgress + \"%\" }}\r\n          ></div>\r\n        </div>\r\n\r\n        <div id=\"loadingSize\">\r\n          {convertKBtoMB(loadingTotalSize)} / {convertKBtoMB(loadingLoadedSize)}{\" \"}\r\n          MB\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loadingTotalSize: state.loader.loadingTotalSize,\r\n    loadingLoadedSize: state.loader.loadingLoadedSize,\r\n    loadingProgress: state.loader.loadingProgress,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(Loader));\r\n","import React, { Component } from \"react\";\nimport ThreeInit from \"../components/three/ThreeInit\";\nimport Loader from \"../components/hud/Loader\";\n\nimport { Spring } from \"react-spring/renderprops\";\n\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n  state = { displayLoadingWindow: true };\n\n  componentDidUpdate() {\n    //change state to display loading window with delay\n    if (this.props.loadingFnished) {\n      setTimeout(() => {\n        this.setState({\n          displayLoadingWindow: false,\n        });\n      }, 1000);\n    }\n  }\n\n  render() {\n    const { loadingFnished } = this.props;\n\n    return (\n      <div className=\"App\">\n        <ThreeInit />\n\n        {this.state.displayLoadingWindow ? (\n          !loadingFnished ? (\n            <Loader />\n          ) : (\n            <Spring from={{ opacity: 1 }} to={{ opacity: 0 }} duration={1000}>\n              {(props) => (\n                <div style={props}>\n                  <Loader />\n                </div>\n              )}\n            </Spring>\n          )\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loadingFnished: state.loader.loadingFnished,\n    displayWindow: state.loader.displayWindow,\n  };\n};\n\nexport default connect(mapStateToProps)(React.memo(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../actions\";\r\n\r\nconst intialState = {\r\n  loadingFnished: false,\r\n  loadingTotalSize: 0,\r\n  loadingLoadedSize: 0,\r\n  loadingProgress: 0,\r\n};\r\n\r\nconst reducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.LoadingSceneFinished:\r\n      return { ...state, loadingFnished: true };\r\n\r\n    case actionTypes.LoadingSceneProgress:\r\n      let progress = (action.loadedSize / action.totalSize) * 100;\r\n\r\n      return {\r\n        ...state,\r\n        loadingTotalSize: action.totalSize,\r\n        loadingLoadedSize: action.loadedSize,\r\n        loadingProgress: progress.toFixed(1) * 1,\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/index.scss\";\nimport App from \"./pages/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nimport loadingReducer from \"./store/reducers/loading\";\n\nconst rootReducer = combineReducers({\n  loader: loadingReducer,\n});\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}